html,
body {
    margin: 0;
    padding: 0;
    width: 100%;
    height: 100%;
    font-family: 'Martel', serif;
}

body {
    display: flex;
}

#d3container {
    display:flex;
    flex-grow:1;
}

#main {
    display: flex;
    flex-direction: column;
    max-width: 500px;
}

.graphPaneWrap {
    margin-left: auto;
    margin-right: auto;
    background-image: url('/static/static/img/textured-bg.png');
    background-repeat: repeat;
    width: 100%;
    height: 100%;
}

.graphPaneWrap>svg {
    display: block;
    width:100%;
    height: 100%;
}

.sidebar-inputs {
    flex-grow: 0;
    flex-shrink: 1;
}

.sidebar-outputs {
    flex-grow: 0;
    flex-shrink: 1;
}

.sidebar-heading {
    padding-left: 0.5em;
    margin-top: 0.5em;
    margin-bottom: 0.5em;
    border-bottom: 2px solid lightgrey;
}

@media (min-width: 600px) {
    #main {
        height: 100%;
    }

    .sidebar-outputs {
        min-height: 10em;
        overflow-y: auto;
    }

    .sidebar-inputs {
        min-height: 10em;
        overflow-y: auto;
    }

    body {
    }
}

@media (max-width: 601px) {
    body {
        flex-direction: column;
    }

    .graphPaneWrap {
        padding: 8px;
        border: 4px solid black;
    }

    .graphPaneWrap>svg {
        min-height: 300px;
    }
}

.sidebar-inputs > .item-line:hover {
    background: darkgrey;
}

svg img {
    image-rendering: pixelated;
}

.node>circle {
    stroke-width: 4px;
    stroke: black;
    fill: white;
}

.link {
    stroke-width: 4px;
    stroke: black;
    marker-end: url(#arrowHead);
}

.node {
    cursor: pointer;
}

.grid-recipe-text {
    text-align: center;
    text-anchor: middle;
}

.debug-pane {
    background-color: red;
    padding: 4px;
    z-index: 100;
}

.button {
    margin: 8px;
    border: 2px solid black;
    border-radius: 4px;
    background: lightgrey;
    text-align: center;
    cursor: pointer;
}

.button:hover {
    background: darkgrey;
}

.primary-search-wrapper {
    border-radius: 4px;
    box-shadow: 0px 4px 8px lightgrey;
    display: flex;
    flex-direction: column;
    margin-left: 30px;
    margin-right: 30px;
    padding: 3px;
}

.primary-search {
    border-color: #ededed;
    border-radius: 4px;
    border-style: solid;
    border-width: 2px;
    flex-grow: 1;
    padding: 4px;
}

.search-result {
    background: #ededed;
    border-bottom: #c0c0c0 solid 2px;
    border-radius: 4px;
    cursor: pointer;
}

.item-line {
    align-items: center;
    display: flex;
    overflow-x: hidden;
    padding: 4px;
    flex-direction: row;
    justify-content: space-between;
}

.item-line-left {
    align-items: center;
    display: flex;
    padding-left: 5px;
    white-space: nowrap;
}

.item-name {
    align-items: center;
    display: flex;
    padding-left: 10px;
    padding-right: 10px;
}

.item-line.odd {
    background: #f0f0f0;
}

.item-icon {
    box-shadow: 0px 0px 4px black;
    border-radius: 32px;
    height: 32px;
    width: 32px;
    margin-right: 0.5em;
}

.item-mcid {
    color: #404040;
    flex-shrink: 1;
    text-overflow: ellipsis;
    padding-left: 1em;
}

.mc-texture {
    image-rendering: optimizespeed;
}

.modal {
    position: fixed;
    z-index: 1;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto;
    background-color: #000000cc;
}

.modal-content {
    background-color: #ededed;
    margin: 8px;
    padding: 8px;
    border: 2px solid black;
    border-radius: 4px;
}

.modal-header {
    border-bottom: 3px solid lightgrey;
    display: flex;
}

.modal-header .modal-header-text {
    width: 100%;
}

.modal-header .item-line {
    width: 100%;
}

.modal-close {
    cursor: pointer;
}

.modal-body {
    display: flex;
}

.modal-left {
    display: flex;
    flex-direction: column;
}

.modal-crafting-type {
    display: flex;
    border-bottom: 2px solid lightgrey;
    padding: 0px 10px;
    cursor: pointer;
}

.modal-crafting-type.selected {
    background: #cdcdcd;
}

.modal-right {
    width: 100%;
    padding: 10px;
    background: #cdcdcd;
    display: flex;
    flex-direction: column;
}

/*
.modal-right>table {
    margin-left:auto;
    margin-right:auto;
    border-spacing: 0px;
}
*/

.modal-recipe-list {
    display:flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: center;
    align-content: center;
    width: 100%;
}

.modal-recipe {
    border-radius: 4px;
    border: 1px solid black;
    cursor: pointer;
    display: flex;
    flex-direction: row;
    margin: 4px;
    padding-bottom: 0px;
    padding-left: 8px;
    padding-right: 8px;
    padding-top: 8px;
}

.modal-recipe .item-spec {
    display: flex;
    flex-direction: column;
    align-items: center;
}

.modal-recipe:hover {
    background: darkgrey;
    border-color: 2px solid black;
}

.modal-recipe-inputs {
    display: flex;
}

.modal-recipe .item-icon {
    display:flex;
}

.modal-recipe-arrow {
    display: flex;
}

.modal-recipe-outputs {
    display: flex;
    flex-wrap: wrap;
}

.modal-footer {
    text-align: right;
    font-size: smaller;
    color: darkgrey;
}

.refinement-input-slot {
    align-items: center;
    border-radius: 4px;
    border: 1px solid black;
    display: flex;
    flex-direction: column;
}

.refinement-input-slot-scale {
    border-bottom: 1px solid black;
    display: flex;
    width: 100%;
    justify-content: center;
}

.refinement-inputs {
    display: flex;
    flex-wrap: wrap;
}

.refinement-outputs {
    display: flex;
}

.refinement-item-spec {
    display: flex;
    padding: 4px;
}

.refinement-item-spec.selected {
    background: lightgreen;
}

.refinement-item-spec.in-grid {
    background: lightblue;
}

.refinement-item-spec.alts {
}

.refinement-item-spec.output {
}

.refinement-recipe {
    align-items: center;
    display: flex;
    flex-direction: row;
    justify-content: center;
}

.refinement-accept-button{
    border-radius: 4px;
    border: 1px solid black;
    margin-left: auto;
    margin-right: auto;
    margin-top: 8px;
    text-align: center;
}

.refinement-accept-button:hover {
    background: darkgrey;
}

.recipe-rect {
    fill: white;
    stroke: black;
}

.confirm-container {
    display: flex;
    flex-direction: row;
    width: 100%;
}

.confirm-container > .button {

    display: flex;
    flex-grow: 1;
    justify-content: center;

}
